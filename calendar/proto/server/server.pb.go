// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/server/server.proto

package server

import (
	context "context"
	fmt "fmt"
	event "github.com/egor1344/otus_calendar/calendar/proto/event"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddEventRequest struct {
	Event                *event.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddEventRequest) Reset()         { *m = AddEventRequest{} }
func (m *AddEventRequest) String() string { return proto.CompactTextString(m) }
func (*AddEventRequest) ProtoMessage()    {}
func (*AddEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{0}
}

func (m *AddEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventRequest.Unmarshal(m, b)
}
func (m *AddEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventRequest.Marshal(b, m, deterministic)
}
func (m *AddEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventRequest.Merge(m, src)
}
func (m *AddEventRequest) XXX_Size() int {
	return xxx_messageInfo_AddEventRequest.Size(m)
}
func (m *AddEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventRequest proto.InternalMessageInfo

func (m *AddEventRequest) GetEvent() *event.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type AddEventResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventResponse) Reset()         { *m = AddEventResponse{} }
func (m *AddEventResponse) String() string { return proto.CompactTextString(m) }
func (*AddEventResponse) ProtoMessage()    {}
func (*AddEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{1}
}

func (m *AddEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventResponse.Unmarshal(m, b)
}
func (m *AddEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventResponse.Marshal(b, m, deterministic)
}
func (m *AddEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventResponse.Merge(m, src)
}
func (m *AddEventResponse) XXX_Size() int {
	return xxx_messageInfo_AddEventResponse.Size(m)
}
func (m *AddEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventResponse proto.InternalMessageInfo

func (m *AddEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type UpdateEventRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventRequest) Reset()         { *m = UpdateEventRequest{} }
func (m *UpdateEventRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEventRequest) ProtoMessage()    {}
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{2}
}

func (m *UpdateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventRequest.Unmarshal(m, b)
}
func (m *UpdateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventRequest.Marshal(b, m, deterministic)
}
func (m *UpdateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventRequest.Merge(m, src)
}
func (m *UpdateEventRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEventRequest.Size(m)
}
func (m *UpdateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventRequest proto.InternalMessageInfo

func (m *UpdateEventRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateEventResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventResponse) Reset()         { *m = UpdateEventResponse{} }
func (m *UpdateEventResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateEventResponse) ProtoMessage()    {}
func (*UpdateEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{3}
}

func (m *UpdateEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventResponse.Unmarshal(m, b)
}
func (m *UpdateEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventResponse.Marshal(b, m, deterministic)
}
func (m *UpdateEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventResponse.Merge(m, src)
}
func (m *UpdateEventResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateEventResponse.Size(m)
}
func (m *UpdateEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventResponse proto.InternalMessageInfo

func (m *UpdateEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type DeleteEventRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventRequest) Reset()         { *m = DeleteEventRequest{} }
func (m *DeleteEventRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEventRequest) ProtoMessage()    {}
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{4}
}

func (m *DeleteEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventRequest.Unmarshal(m, b)
}
func (m *DeleteEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventRequest.Merge(m, src)
}
func (m *DeleteEventRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEventRequest.Size(m)
}
func (m *DeleteEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventRequest proto.InternalMessageInfo

func (m *DeleteEventRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteEventResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventResponse) Reset()         { *m = DeleteEventResponse{} }
func (m *DeleteEventResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteEventResponse) ProtoMessage()    {}
func (*DeleteEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_aedf378765df4bae, []int{5}
}

func (m *DeleteEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventResponse.Unmarshal(m, b)
}
func (m *DeleteEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventResponse.Marshal(b, m, deterministic)
}
func (m *DeleteEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventResponse.Merge(m, src)
}
func (m *DeleteEventResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteEventResponse.Size(m)
}
func (m *DeleteEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventResponse proto.InternalMessageInfo

func (m *DeleteEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*AddEventRequest)(nil), "calendar.AddEventRequest")
	proto.RegisterType((*AddEventResponse)(nil), "calendar.AddEventResponse")
	proto.RegisterType((*UpdateEventRequest)(nil), "calendar.UpdateEventRequest")
	proto.RegisterType((*UpdateEventResponse)(nil), "calendar.UpdateEventResponse")
	proto.RegisterType((*DeleteEventRequest)(nil), "calendar.DeleteEventRequest")
	proto.RegisterType((*DeleteEventResponse)(nil), "calendar.DeleteEventResponse")
}

func init() { proto.RegisterFile("proto/server/server.proto", fileDescriptor_aedf378765df4bae) }

var fileDescriptor_aedf378765df4bae = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0x82, 0x52, 0x7a, 0x60, 0x31, 0x21, 0x8e, 0xe4,
	0xc4, 0x9c, 0xd4, 0xbc, 0x94, 0xc4, 0x22, 0x29, 0x71, 0x88, 0xa2, 0xd4, 0xb2, 0xd4, 0xbc, 0x12,
	0x08, 0x09, 0x51, 0xa2, 0x64, 0xca, 0xc5, 0xef, 0x98, 0x92, 0xe2, 0x0a, 0x12, 0x09, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe2, 0x62, 0x05, 0xab, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x36, 0xe2, 0xd1, 0x83, 0xa8, 0x87, 0xa8, 0x81, 0x48, 0x29, 0x69, 0x71, 0x09, 0x20, 0xb4, 0x15,
	0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x89, 0x71, 0xb1, 0x15, 0x97, 0x24, 0x96, 0x94, 0x16, 0x83,
	0x35, 0x72, 0x06, 0x41, 0x79, 0x4a, 0x2a, 0x5c, 0x42, 0xa1, 0x05, 0x29, 0x89, 0x25, 0xa9, 0x28,
	0xb6, 0xf0, 0x71, 0x31, 0x65, 0xa6, 0x80, 0x55, 0xb2, 0x06, 0x31, 0x65, 0xa6, 0x28, 0xe9, 0x72,
	0x09, 0xa3, 0xa8, 0x22, 0x6c, 0xa8, 0x4b, 0x6a, 0x4e, 0x2a, 0x61, 0x43, 0x51, 0x54, 0xe1, 0x37,
	0xd4, 0xe8, 0x15, 0x23, 0x17, 0xaf, 0x33, 0x34, 0xc8, 0xc0, 0x3a, 0x84, 0x1c, 0xb9, 0x38, 0x60,
	0xfe, 0x14, 0x92, 0xd4, 0x83, 0x05, 0xa7, 0x1e, 0x5a, 0x90, 0x49, 0x49, 0x61, 0x93, 0x82, 0x5a,
	0xe6, 0xc5, 0xc5, 0x8d, 0xe4, 0x31, 0x21, 0x19, 0x84, 0x52, 0xcc, 0x50, 0x91, 0x92, 0xc5, 0x21,
	0x8b, 0x30, 0x0b, 0xc9, 0x3f, 0xc8, 0x66, 0x61, 0x06, 0x06, 0xb2, 0x59, 0x58, 0x02, 0xc1, 0x89,
	0x23, 0x8a, 0x0d, 0x92, 0x58, 0x92, 0xd8, 0xc0, 0x49, 0xc1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0xbf, 0xbe, 0x0f, 0x13, 0x4a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalendarEventClient is the client API for CalendarEvent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarEventClient interface {
	AddEvent(ctx context.Context, in *AddEventRequest, opts ...grpc.CallOption) (*AddEventResponse, error)
	UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*UpdateEventResponse, error)
	DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*DeleteEventResponse, error)
}

type calendarEventClient struct {
	cc *grpc.ClientConn
}

func NewCalendarEventClient(cc *grpc.ClientConn) CalendarEventClient {
	return &calendarEventClient{cc}
}

func (c *calendarEventClient) AddEvent(ctx context.Context, in *AddEventRequest, opts ...grpc.CallOption) (*AddEventResponse, error) {
	out := new(AddEventResponse)
	err := c.cc.Invoke(ctx, "/calendar.CalendarEvent/AddEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarEventClient) UpdateEvent(ctx context.Context, in *UpdateEventRequest, opts ...grpc.CallOption) (*UpdateEventResponse, error) {
	out := new(UpdateEventResponse)
	err := c.cc.Invoke(ctx, "/calendar.CalendarEvent/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarEventClient) DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*DeleteEventResponse, error) {
	out := new(DeleteEventResponse)
	err := c.cc.Invoke(ctx, "/calendar.CalendarEvent/DeleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarEventServer is the server API for CalendarEvent service.
type CalendarEventServer interface {
	AddEvent(context.Context, *AddEventRequest) (*AddEventResponse, error)
	UpdateEvent(context.Context, *UpdateEventRequest) (*UpdateEventResponse, error)
	DeleteEvent(context.Context, *DeleteEventRequest) (*DeleteEventResponse, error)
}

// UnimplementedCalendarEventServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarEventServer struct {
}

func (*UnimplementedCalendarEventServer) AddEvent(ctx context.Context, req *AddEventRequest) (*AddEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEvent not implemented")
}
func (*UnimplementedCalendarEventServer) UpdateEvent(ctx context.Context, req *UpdateEventRequest) (*UpdateEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedCalendarEventServer) DeleteEvent(ctx context.Context, req *DeleteEventRequest) (*DeleteEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}

func RegisterCalendarEventServer(s *grpc.Server, srv CalendarEventServer) {
	s.RegisterService(&_CalendarEvent_serviceDesc, srv)
}

func _CalendarEvent_AddEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarEventServer).AddEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.CalendarEvent/AddEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarEventServer).AddEvent(ctx, req.(*AddEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarEvent_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarEventServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.CalendarEvent/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarEventServer).UpdateEvent(ctx, req.(*UpdateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarEvent_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarEventServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.CalendarEvent/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarEventServer).DeleteEvent(ctx, req.(*DeleteEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalendarEvent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calendar.CalendarEvent",
	HandlerType: (*CalendarEventServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEvent",
			Handler:    _CalendarEvent_AddEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _CalendarEvent_UpdateEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _CalendarEvent_DeleteEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/server/server.proto",
}
